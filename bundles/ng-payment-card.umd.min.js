!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("ng-payment-card",["exports","@angular/core","@angular/forms","@angular/common"],e):e((r=r||self)["ng-payment-card"]={},r.ng.core,r.ng.forms,r.ng.common)}(this,(function(r,e,n,t){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function o(r){var e="function"==typeof Symbol&&r[Symbol.iterator],n=0;return e?e.call(r):{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}}}function a(r,e){var n="function"==typeof Symbol&&r[Symbol.iterator];if(!n)return r;var t,o,a=n.call(r),c=[];try{for(;(void 0===e||e-- >0)&&!(t=a.next()).done;)c.push(t.value)}catch(r){o={error:r}}finally{try{t&&!t.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return c}var c=function(){function r(){}return r.numbersOnly=function(e){var n=e.value;return new RegExp(/^[0-9]+$/).test(n)?null:r.NUMBERS_ONLY_ERR},r.checksum=function(e){for(var n=e.value,t=[0,2,4,6,8,1,3,5,7,9],o=n?n.length:0,a=0,c=!0;o;){var i=parseInt(n.charAt(--o),10);a+=(c=!c)?t[i]:i}return a&&a%10==0?null:r.CHECKSUM_INVALID},r.expiration=function(e){var n=Number(e.get("expirationMonth").value),t=Number(e.get("expirationYear").value),o=new Date(t,n+1,0);return(new Date).getTime()>o.getTime()?r.CARD_EXPIRED:null},r.NUMBERS_ONLY_ERR={numbersOnly:!0},r.CHECKSUM_INVALID={checksum:!0},r.CARD_EXPIRED={expiration:!0},r}(),i="American Express",l="Diners",s="Diners Carte Blanche",d="Discover Club",m="China UnionPay",p="JCB",u="Laser",f="Maestro",g="Mastercard",h="Visa Electron",x="VISA",_=new Map;_.set(i,new RegExp("^3[47]")),_.set(l,new RegExp("^36")),_.set(s,new RegExp("^30[0-5]")),_.set(d,new RegExp("^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)")),_.set(m,new RegExp("^(62[0-9]{14,17})$")),_.set(p,new RegExp("^35(2[89]|[3-8][0-9])")),_.set(u,new RegExp("^(6304|6706|6709|6771)[0-9]{12,15}$")),_.set(f,new RegExp("^(50|5[6-8]|6)[0-9]{12,19}$")),_.set(g,new RegExp("^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$")),_.set(h,new RegExp("^(4026|417500|4508|4844|491([37]))")),_.set(x,new RegExp("^4"));var b={JANUARY:"01",FEBRUARY:"02",MARCH:"03",APRIL:"04",MAY:"05",JUNE:"06",JULY:"07",AUGUST:"08",SEPTEMBER:"09",OCTOBER:"10",NOVEMBER:"11",DECEMBER:"12"},v=function(){function r(){}return r.getCardType=function(e){var n,t;try{for(var c=o(Array.from(r.cardTypes.entries())),i=c.next();!i.done;i=c.next()){var l=a(i.value,2),s=l[0],d=l[1];if(e.split(new RegExp("[ \\-]")).join("").match(d))return s}}catch(r){n={error:r}}finally{try{i&&!i.done&&(t=c.return)&&t.call(c)}finally{if(n)throw n.error}}return null},r.getMonths=function(){var r,e,n=[];try{for(var t=o(Object.keys(b)),a=t.next();!a.done;a=t.next()){var c=a.value;n.push(b[c])}}catch(e){r={error:e}}finally{try{a&&!a.done&&(e=t.return)&&e.call(t)}finally{if(r)throw r.error}}return n},r.getYears=function(){for(var r=[],e=(new Date).getFullYear(),n=-2;n<5;n++)r.push(e+n);return r},r.cardTypes=_,r.decorators=[{type:e.Injectable}],r}(),y=function(){function r(r,n){this._ccService=r,this._fb=n,this.months=[],this.years=[],this.ccNumMissingTxt="Numéro de carte est requis",this.ccNumTooShortTxt="Numéro de carte trop court",this.ccNumTooLongTxt="Numéro de carte trop long",this.ccNumContainsLettersTxt="Numéro doit contenir que des chiffres",this.ccNumChecksumInvalidTxt="Numéro de carte invalide",this.cardHolderMissingTxt="Nom du titulaire est requis",this.cardHolderTooLongTxt="Nom du titulaire est trop long",this.expirationMonthMissingTxt="Mois d`'expiration requis",this.expirationYearMissingTxt="Année d`'expiration requis",this.ccvMissingTxt="CCV requis",this.ccvNumTooShortTxt="CCV trop court",this.ccvNumTooLongTxt="CCV trop long",this.ccvContainsLettersTxt="CCV doit contenir que des chiffres",this.cardExpiredTxt="Carte expirée",this.validateCCNum=!0,this.validateCardHolder=!0,this.validateExpirationMonth=!0,this.validateExpirationYear=!0,this.validateCardExpiration=!0,this.validateCCV=!0,this.formSaved=new e.EventEmitter}return r.prototype.ngOnInit=function(){this.buildForm(),this.assignDateValues()},r.prototype.assignDateValues=function(){this.months=v.getMonths(),this.years=v.getYears()},r.prototype.buildForm=function(){this.ccForm=this._fb.group({cardNumber:["",n.Validators.compose([n.Validators.required,n.Validators.minLength(12),n.Validators.maxLength(19),c.numbersOnly,c.checksum])],cardHolder:["",n.Validators.compose([n.Validators.required,n.Validators.maxLength(22)])],expirationMonth:["",n.Validators.required],expirationYear:["",n.Validators.required],ccv:["",n.Validators.compose([n.Validators.required,n.Validators.minLength(3),n.Validators.maxLength(4),c.numbersOnly])]},{validator:c.expiration})},r.prototype.getCardType=function(r){return v.getCardType(r)},r.prototype.emitSavedCard=function(){var r=this.ccForm.value;this.formSaved.emit(r)},r.decorators=[{type:e.Component,args:[{selector:"ng-payment-card",template:'<section class="cc-wrapper">\r\n  <div class="cc-box">\r\n    <div #ccBoxFlip class="cc-box--flip">\r\n      <div class="cc-box__front">\r\n        <div class="cc-box__logo">\r\n          <p>{{ getCardType(ccNumber.value) | uppercase }}</p>\r\n        </div>\r\n        <div class="cc-box__element">\r\n          <label class="cc-form__label" for="cc-card-number-display"></label>\r\n          <input\r\n            class="cc-form__input cc-form__input--transparent cc-form__input--embosed"\r\n            id="cc-card-number-display"\r\n            aria-label="Payment card number"\r\n            disabled="disabled"\r\n            [value]="ccForm.get(\'cardNumber\').value | paymentCardNumber"\r\n          />\r\n        </div>\r\n        <div class="cc-box__element">\r\n          <label class="cc-form__label" for="cc-holder-display">Numéro de carte</label>\r\n          <input\r\n            class="cc-form__input cc-form__input--transparent cc-form__input--embosed"\r\n            id="cc-holder-display"\r\n            aria-label="Card holder"\r\n            disabled="disabled"\r\n            [value]="ccForm.get(\'cardHolder\').value | uppercase"\r\n          />\r\n        </div>\r\n        <div class="cc-box__element">\r\n          <label class="cc-form__label" for="cc-valid-date-display">Exp</label>\r\n          <input\r\n            class="cc-form__input cc-form__input--left-align cc-form__input--transparent cc-form__input--embosed"\r\n            id="cc-valid-date-display"\r\n            aria-label="Card holder"\r\n            disabled="disabled"\r\n            [value]="ccForm.get(\'expirationMonth\').value + \'/\' + ccForm.get(\'expirationYear\').value | validThru"\r\n          />\r\n        </div>\r\n        <div class="cc-box__chip"></div>\r\n      </div>\r\n      <div class="cc-box__back">\r\n        <div class="cc-box__strip">&nbsp;</div>\r\n        <div class="cc-box__element">\r\n          <input\r\n            class="cc-form__input cc-form__input--cursive cc-form__input--right-align"\r\n            id="cc-ccv-display"\r\n            aria-label="CCV"\r\n            disabled="disabled"\r\n            [value]="\'CCV: \' + ccForm.get(\'ccv\').value"\r\n            title="CCV"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <form class="cc-form" [formGroup]="ccForm" autocomplete="off">\r\n    <div class="cc-form__wrapper--long">\r\n      <label for="cc-number" class="cc-form__label cc-form__label--first">Numéro de carte</label>\r\n      <input\r\n        #ccNumber\r\n        class="cc-form__input"\r\n        id="cc-number"\r\n        aria-label="Card number"\r\n        type="text"\r\n        title="Card number"\r\n        maxlength="19"\r\n        formControlName="cardNumber"\r\n        (focus)="ccBoxFlip.classList.remove(\'hover\')"\r\n      />\r\n      <div\r\n        class="cc-form__error"\r\n        *ngIf="validateCCNum && ccForm.get(\'cardNumber\').touched && ccForm.get(\'cardNumber\').hasError(\'required\')"\r\n      >\r\n        {{ ccNumMissingTxt }}\r\n      </div>\r\n      <div\r\n        class="cc-form__error"\r\n        *ngIf="validateCCNum && ccForm.get(\'cardNumber\').touched && ccForm.get(\'cardNumber\').hasError(\'minlength\')"\r\n      >\r\n        {{ ccNumTooShortTxt }}\r\n      </div>\r\n      <div\r\n        class="cc-form__error"\r\n        *ngIf="validateCCNum && ccForm.get(\'cardNumber\').touched && ccForm.get(\'cardNumber\').hasError(\'maxlength\')"\r\n      >\r\n        {{ ccNumTooLongTxt }}\r\n      </div>\r\n      <div\r\n        class="cc-form__error"\r\n        *ngIf="validateCCNum && ccForm.get(\'cardNumber\').touched && ccForm.get(\'cardNumber\').hasError(\'numbersOnly\')"\r\n      >\r\n        {{ ccNumContainsLettersTxt }}\r\n      </div>\r\n      <div\r\n        class="cc-form__error"\r\n        *ngIf="validateCCNum && ccForm.get(\'cardNumber\').touched && ccForm.get(\'cardNumber\').hasError(\'checksum\')"\r\n      >\r\n        {{ ccNumChecksumInvalidTxt }}\r\n      </div>\r\n    </div>\r\n    <div class="cc-form__wrapper--long">\r\n      <label for="cc-holder-name" class="cc-form__label">Titulaire de la carte </label>\r\n      <input\r\n        class="cc-form__input"\r\n        id="cc-holder-name"\r\n        aria-label="Card holder name"\r\n        type="text"\r\n        title="Card holder name"\r\n        maxlength="22"\r\n        formControlName="cardHolder"\r\n        (focus)="ccBoxFlip.classList.remove(\'hover\')"\r\n      />\r\n      <div\r\n        class="cc-form__error"\r\n        *ngIf="validateCardHolder && ccForm.get(\'cardHolder\').touched && ccForm.get(\'cardHolder\').hasError(\'required\')"\r\n      >\r\n        {{ cardHolderMissingTxt }}\r\n      </div>\r\n      <div\r\n        class="cc-form__error"\r\n        *ngIf="validateCardHolder && ccForm.get(\'cardHolder\').touched && ccForm.get(\'cardHolder\').hasError(\'maxlength\')"\r\n      >\r\n        {{ cardHolderTooLongTxt }}\r\n      </div>\r\n    </div>\r\n    <div class="cc-form--inline">\r\n      <div class="cc-form__wrapper cc-form__wrapper--short">\r\n        <label for="cc-expiration-month" class="cc-form__label">Mois d\'expiration</label>\r\n        <select\r\n          id="cc-expiration-month"\r\n          class="cc-form__select"\r\n          aria-label="Expiration month"\r\n          formControlName="expirationMonth"\r\n        >\r\n          <option *ngFor="let month of months" value="{{ month }}" (click)="ccBoxFlip.classList.remove(\'hover\')"\r\n            >{{ month }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class="cc-form__wrapper cc-form__wrapper--short">\r\n        <label for="cc-expiration-year" class="cc-form__label">Année d\'expiration</label>\r\n        <select\r\n          id="cc-expiration-year"\r\n          class="cc-form__select"\r\n          aria-label="Expiration year"\r\n          formControlName="expirationYear"\r\n        >\r\n          <option *ngFor="let year of years" value="{{ year }}" (click)="ccBoxFlip.classList.remove(\'hover\')"\r\n            >{{ year }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class="cc-form__wrapper cc-form__wrapper--short cc-form__wrapper--last">\r\n        <label for="cc-ccv" class="cc-form__label">ccv</label>\r\n        <input\r\n          class="cc-form__input cc-form__input--short"\r\n          id="cc-ccv"\r\n          aria-label="CCV"\r\n          type="text"\r\n          title="CCV"\r\n          minlength="3"\r\n          maxlength="4"\r\n          formControlName="ccv"\r\n          (focus)="ccBoxFlip.classList.add(\'hover\')"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div\r\n      class="cc-form__error"\r\n      *ngIf="\r\n        validateExpirationMonth &&\r\n        ccForm.get(\'expirationMonth\').touched &&\r\n        ccForm.get(\'expirationMonth\').hasError(\'required\')\r\n      "\r\n    >\r\n      {{ expirationMonthMissingTxt }}\r\n    </div>\r\n    <div\r\n      class="cc-form__error"\r\n      *ngIf="\r\n        validateExpirationMonth &&\r\n        ccForm.get(\'expirationYear\').touched &&\r\n        ccForm.get(\'expirationYear\').hasError(\'required\')\r\n      "\r\n    >\r\n      {{ expirationYearMissingTxt }}\r\n    </div>\r\n    <div\r\n      class="cc-form__error"\r\n      *ngIf="\r\n        validateCardExpiration &&\r\n        ccForm.get(\'expirationMonth\').touched &&\r\n        ccForm.get(\'expirationYear\').touched &&\r\n        ccForm.hasError(\'expiration\')\r\n      "\r\n    >\r\n      {{ cardExpiredTxt }}\r\n    </div>\r\n    <div\r\n      class="cc-form__error"\r\n      *ngIf="validateCCV && ccForm.get(\'ccv\').touched && ccForm.get(\'ccv\').hasError(\'required\')"\r\n    >\r\n      {{ ccvMissingTxt }}\r\n    </div>\r\n    <div\r\n      class="cc-form__error"\r\n      *ngIf="validateCCV && ccForm.get(\'ccv\').touched && ccForm.get(\'ccv\').hasError(\'minlength\')"\r\n    >\r\n      {{ ccvNumTooShortTxt }}\r\n    </div>\r\n    <div\r\n      class="cc-form__error"\r\n      *ngIf="validateCCV && ccForm.get(\'ccv\').touched && ccForm.get(\'ccv\').hasError(\'maxlength\')"\r\n    >\r\n      {{ ccvNumTooLongTxt }}\r\n    </div>\r\n    <div\r\n      class="cc-form__error"\r\n      *ngIf="validateCCV && ccForm.get(\'ccv\').touched && ccForm.get(\'ccv\').hasError(\'numbersOnly\')"\r\n    >\r\n      {{ ccvContainsLettersTxt }}\r\n    </div>\r\n    <button\r\n      type="submit"\r\n      class="cc-form__button cc-form__button--ripple"\r\n      aria-label="submit"\r\n      (click)="emitSavedCard()"\r\n      (keydown.enter)="emitSavedCard()"\r\n    >\r\n      Payer\r\n    </button>\r\n  </form>\r\n</section>\r\n',encapsulation:e.ViewEncapsulation.None,styles:["@import url(https://fonts.googleapis.com/css?family=Inconsolata);.cc-form{align-items:center;display:flex;flex-flow:column;flex-wrap:wrap;height:100%;justify-content:center;width:100%}.cc-form--inline{align-items:inherit;display:inherit;flex-flow:row;flex-wrap:inherit;height:100%;justify-content:flex-end;margin-bottom:5%;width:100%}@media only screen and (max-width:1279px){.cc-form--inline{align-items:inherit;display:inherit;flex-flow:row;flex-wrap:inherit;height:100%;justify-content:flex-end;margin-bottom:5%;width:100%}}@media only screen and (max-width:599px){.cc-form--inline{align-items:center;display:inherit;flex-flow:column;flex-wrap:wrap;height:100%;justify-content:center;width:100%}}input[type=number]{-moz-appearance:textfield}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}@media only screen and (max-width:3000px){.cc-form__wrapper{margin-right:5%;margin-top:5%}.cc-form__wrapper--long{width:60%}.cc-form__wrapper--short{width:15%}.cc-form__wrapper--last{margin-left:5%;margin-right:20%;margin-top:30px}}@media only screen and (max-width:1279px){.cc-form__wrapper{margin-right:5%;margin-top:5%}.cc-form__wrapper--long{width:60%}.cc-form__wrapper--short{width:15%}.cc-form__wrapper--last{margin-left:5%;margin-right:20%}}@media only screen and (max-width:599px){.cc-form__wrapper{margin-right:0;margin-top:0}.cc-form__wrapper--long,.cc-form__wrapper--short{width:80%}.cc-form__wrapper--last{margin-left:0;margin-right:0}}.cc-form__label{color:rgba(0,0,0,.6);display:block;font-family:Inconsolata,Serif,serif;font-size:.7em;font-weight:400;letter-spacing:1px;line-height:10px;margin-bottom:5px;margin-top:5%;text-align:left;text-shadow:none;text-transform:uppercase;width:100%}.cc-form__label--first{margin-top:20%}.cc-form__select{-webkit-appearance:listbox;-moz-appearance:listbox;appearance:listbox}.cc-form__input,.cc-form__select{border:1px solid rgba(0,0,0,.3);border-radius:5px;box-shadow:inset 0 1px 4px rgba(0,0,0,.2);color:#333;display:block;font-size:1.2em;height:38px;margin:0;outline:0;padding:0;text-align:left;width:100%}.cc-form__input--transparent{background:0 0;border:none;border-radius:0;box-shadow:none}.cc-form__input--embosed{color:#fff;font-family:Inconsolata,monospace;font-size:2vw;text-shadow:0 2px 1px rgba(0,0,0,.3)}@media only screen and (max-width:1279px){.cc-form__input--embosed{font-size:2.5vw}}@media only screen and (max-width:599px){.cc-form__input--embosed{font-size:3vw}}.cc-form__input--cursive{font-size:.7em;font-style:italic;left:0;margin:0 auto;position:absolute}.cc-form__input--right-align{padding-right:5%;text-align:right}.cc-form__input--left-align{text-align:left}.cc-form__input:focus,.cc-form__select:focus{border-color:rgba(113,168,102,.9)}.cc-form__error{color:#ff5b5f;font-size:.7em}.cc-form__button{background:rgba(113,168,102,.9);border:0;border-radius:3px;color:#fff;cursor:pointer;margin-bottom:5%;margin-top:1%;outline:0;overflow:hidden;padding:1%;position:relative;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;white-space:nowrap;width:60%}.cc-form__button:hover{box-shadow:0 6px 8px -3px rgba(0,0,0,.3)}.cc-form__button:focus{background:rgba(85,133,76,.9)}.cc-form__button--ripple{overflow:hidden;position:relative}.cc-form__button--ripple:after{background:rgba(255,255,255,.3);border-radius:80%;content:'';display:block;height:120px;left:50%;margin-left:-50%;margin-top:-60px;position:absolute;top:50%;transform:scale(0);width:100%}.cc-form__button--ripple:not(:active):after{-webkit-animation:2s ease-out button-ripple;animation:2s ease-out button-ripple}@-webkit-keyframes button-ripple{0%{transform:scale(0)}20%{transform:scale(1)}100%{opacity:0;transform:scale(1)}}@keyframes button-ripple{0%{transform:scale(0)}20%{transform:scale(1)}100%{opacity:0;transform:scale(1)}}.cc-wrapper{background-color:#fff;height:100%;margin:0;padding:0;width:100%}.cc-box{height:100px;margin:0 auto;padding:0;position:relative;transform:translateY(-100%);width:70%;z-index:1}@media only screen and (max-width:1279px){.cc-box{transform:translateY(-115%)}}@media only screen and (max-width:599px){.cc-box{transform:translateY(-130%)}}.cc-box--flip{transform-style:preserve-3d;transition:.6s}.cc-box--flip.hover,.cc-box--flip:hover{transform:rotateY(180deg)}.cc-box__element{padding:0;width:80%}.cc-box__logo{align-items:center;color:#fff;display:flex;flex-flow:row nowrap;font-size:1.2em;font-style:italic;font-weight:700;justify-content:flex-end;margin-right:10%;width:100%}.cc-box__strip{background:linear-gradient(135deg,#404040,#1a1a1a);font-size:1.7em;margin:0;padding:0;position:relative;transform:translateY(-90%);width:100%}.cc-box__back,.cc-box__front{align-items:center;-webkit-backface-visibility:hidden;backface-visibility:hidden;background:linear-gradient(135deg,#bd6772,#53223f);border-radius:15px;display:flex;flex-direction:column;flex-flow:column nowrap;height:250px;justify-content:center;left:0;position:absolute;top:0;width:100%}.cc-box__front{transform:rotateY(0)}.cc-box__back{transform:rotateY(180deg)}.ng-invalid.ng-touched{border-color:#ff5b5f}.ng-valid.ng-touched{border-color:#b2b2b2}"]}]}],r.ctorParameters=function(){return[{type:v},{type:n.FormBuilder}]},r.propDecorators={ccNumMissingTxt:[{type:e.Input}],ccNumTooShortTxt:[{type:e.Input}],ccNumTooLongTxt:[{type:e.Input}],ccNumContainsLettersTxt:[{type:e.Input}],ccNumChecksumInvalidTxt:[{type:e.Input}],cardHolderMissingTxt:[{type:e.Input}],cardHolderTooLongTxt:[{type:e.Input}],expirationMonthMissingTxt:[{type:e.Input}],expirationYearMissingTxt:[{type:e.Input}],ccvMissingTxt:[{type:e.Input}],ccvNumTooShortTxt:[{type:e.Input}],ccvNumTooLongTxt:[{type:e.Input}],ccvContainsLettersTxt:[{type:e.Input}],cardExpiredTxt:[{type:e.Input}],validateCCNum:[{type:e.Input}],validateCardHolder:[{type:e.Input}],validateExpirationMonth:[{type:e.Input}],validateExpirationYear:[{type:e.Input}],validateCardExpiration:[{type:e.Input}],validateCCV:[{type:e.Input}],formSaved:[{type:e.Output}]},r}(),w=function(){function r(){}return r.prototype.transform=function(r){switch(r.length){case 15:return r=(r=r.replace(/\b(\d{4})/,"$1-")).replace(/-(\d{6})/,"-$1-");case 16:return r.match(/.{4}/g).join("-");default:return r}},r.decorators=[{type:e.Pipe,args:[{name:"paymentCardNumber"}]}],r}(),C=function(){function r(){}return r.prototype.transform=function(r){return r&&7===r.length?r.substr(0,3)+r.substr(5):"/"},r.decorators=[{type:e.Pipe,args:[{name:"validThru"}]}],r}(),N=function(){function r(){}return r.decorators=[{type:e.NgModule,args:[{imports:[n.ReactiveFormsModule,t.CommonModule],declarations:[y,w,C],providers:[v],exports:[y]}]}],r}();r.NgPaymentCardModule=N,r.PaymentCardComponent=y,r.ɵa=v,r.ɵb=w,r.ɵc=C,Object.defineProperty(r,"__esModule",{value:!0})}));
//# sourceMappingURL=ng-payment-card.umd.min.js.map